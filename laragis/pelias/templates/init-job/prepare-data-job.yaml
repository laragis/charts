{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if .Values.initJob.prepareData.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-prepare-data" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/part-of: pelias
  {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.initJob.annotations .Values.commonAnnotations ) "context" . ) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
spec:
  backoffLimit: {{ .Values.initJob.backoffLimit }}
  {{- if .Values.initJob.cleanupAfterFinished.enabled }} 
  ttlSecondsAfterFinished: {{ .Values.initJob.cleanupAfterFinished.seconds }} 
  {{- end }} 
  template:
    metadata:
      {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.initJob.podLabels .Values.commonLabels ) "context" . ) }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
      {{- if .Values.initJob.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.initJob.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "pelias.api.imagePullSecrets" . | nindent 6 }}
      restartPolicy: OnFailure
      {{- if .Values.initJob.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.initJob.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      initContainers:
        - name: prepare-polylines
          image: pelias/polylines:master
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -ec
            - |
              [ ! -f "/data/tmp/prepare_polylines.lock" ] && bash ./docker_extract.sh && install -D /dev/null /data/tmp/prepare_polylines.lock || echo "Done!"
          volumeMounts:
            - name: configuration
              mountPath: /code/pelias.json
              subPath: pelias.json
            - name: data
              mountPath: /data
        - name: prepare-placeholder
          image: pelias/placeholder:master
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -ec
            - |
              mkdir -p /data/blacklist && touch /data/blacklist/osm.txt
              [ ! -f "/data/tmp/prepare_placeholder.lock" ] && ./cmd/extract.sh && ./cmd/build.sh && install -D /dev/null /data/tmp/prepare_placeholder.lock || echo "Done!"
          volumeMounts:
            - name: configuration
              mountPath: /code/pelias.json
              subPath: pelias.json
            - name: data
              mountPath: /data
        - name: prepare-interpolation
          image: pelias/interpolation:master
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -ec
            - |
              [ ! -f "/data/tmp/prepare_interpolation.lock" ] && bash ./docker_build.sh && install -D /dev/null /data/tmp/prepare_interpolation.lock || echo "Done!"
          volumeMounts:
            - name: configuration
              mountPath: /code/pelias.json
              subPath: pelias.json
            - name: data
              mountPath: /data
      containers:
        - name: prepare-final
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "echo 'Job completed!'"]
      volumes:
        - name: configuration
          configMap:
            name: {{ include "pelias.configMapName"  . }}
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "common.names.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }}