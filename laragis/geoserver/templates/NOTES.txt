CHART NAME: {{ .Chart.Name  }}
CHART VERSION: {{ .Chart.Version  }}
APP VERSION: {{ .Chart.AppVersion  }}

** Please be patient while the chart is being deployed **

{{- if .Values.diagnosticMode.enabled }}
The chart has been deployed in diagnostic mode. All probes have been disabled and the command has been overwritten with:

  command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 4 }}
  args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 4 }}

Get the list of pods by executing:

  kubectl get pods --namespace {{ include "common.names.namespace" . | quote }} -l app.kubernetes.io/instance={{ .Release.Name }}

Access the pod you want to debug by executing

  kubectl exec --namespace {{ include "common.names.namespace" . | quote }} -ti <NAME OF THE POD> -- bash

{{- else }}

1. Get the application URL by running these commands:

{{- if .Values.ingress.enabled }}
    {{ ternary "https" "http" .Values.ingress.tls }}://{{ .Values.ingress.hostname }}{{ .Values.ingress.path }}
{{- else if contains "NodePort" .Values.service.type }}
    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "common.names.fullname" . }})
    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "common.names.fullname" . }}'
    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "common.names.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
    echo http://$SERVICE_IP:{{ .Values.service.ports.geoserver }}
{{- else if contains "ClusterIP" .Values.service.type }}
    echo "Browse to http://127.0.0.1:8080"
    kubectl port-forward svc/{{ include "common.names.fullname" . }} 8080:{{ .Values.service.ports.geoserver }} &
{{- end }}

2. Get the admin credentials:

    echo "User: $(kubectl get secret {{ include "geoserver.authSecretName" . }} --namespace {{ .Release.Namespace }} -o jsonpath="{.data.{{ include "geoserver.adminSecretUserKey" . }}}" | base64 -d)"
    echo "Password: $(kubectl get secret {{ include "geoserver.authSecretName" . }} --namespace {{ .Release.Namespace }} -o jsonpath="{.data.{{ include "geoserver.adminSecretPasswordKey" . }}}" | base64 -d)"

{{- end }}