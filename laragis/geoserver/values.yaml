# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
## @param global.storageClass DEPRECATED: use global.defaultStorageClass instead
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  defaultStorageClass: ""
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto

## @section Common parameters

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Diagnostic mode
## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
## @param diagnosticMode.command Command to override all containers in the chart release
## @param diagnosticMode.args Args to override all containers in the chart release
##
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity

## @section GeoServer parameters

## GeoServer image version
## ref: https://hub.docker.com/r/kartoza/geoserver/tags/
## @param image.registry [default: REGISTRY_NAME] GeoServer image registry
## @param image.repository [default: REPOSITORY_NAME/geoserver] GeoServer image repository
## @skip image.tag GeoServer image tag (immutable tags are recommended)
## @param image.digest GeoServer image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy GeoServer image pull policy
## @param image.pullSecrets GeoServer image pull secrets
##
image:
  registry: docker.io
  repository: kartoza/geoserver
  tag: 2.22.4
  digest: ""
  ## Specify a imagePullPolicy
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  pullSecrets: []
## GeoServer Authentication parameters
##
auth:
  ## @param admin.user GeoServer admin username
  ##
  user: "admin"
  ## @param admin.password Admin password. If a password is not provided a random password will be generated
  ##
  password: ""
  ## @param admin.existingSecret Name of the existing secret containing admin password
  ##
  existingSecret: ""
  ## @param auth.secretKeys.userKey Name of key in existing secret to use for GeoServer credentials. Only used when `auth.existingSecret` is set.
  ## @param auth.secretKeys.passwordKey Name of key in existing secret to use for GeoServer credentials. Only used when `auth.existingSecret` is set.
  ##
  secretKeys:
    userKey: geoserver-user
    passwordKey: geoserver-password
## @param architecture GeoServer architecture (`standalone` or `replication`)
##
architecture: standalone
## @param extraEnvVars Add extra environment variables for all the GeoServer pods
##
extraEnvVars: []
## @param extraEnvVarsCM ConfigMap with extra environment variables for all the GeoServer pods
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Secret with extra environment variables for all the GeoServer pods
##
extraEnvVarsSecret: ""
## @param extraEnvVarsSecrets List of secrets with extra environment variables for all the GeoServer pods
##
extraEnvVarsSecrets: []
## @param sidecars Add additional sidecar containers to all the GeoServer pods
## Example:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param initContainers Add additional init containers to all the GeoServer pods
## Example:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for all the GeoServer pods
##
extraVolumeMounts: []
## @param extraVolumes Optionally specify extra list of additional volumes for the all the GeoServer pods
##
extraVolumes: []

## @section GeoServer Configuration parameters
## GeoServer settings based on environment variables
## ref: https://github.com/kartoza/docker-geoserver/blob/develop/scripts/env-data.sh
## ref: https://docs.geoserver.org/stable/en/user/configuration/properties/index.html

## @param resetAdminCredentials
##
resetAdminCredentials: "false"
## @param geoserverDataDir The location of the GeoServer data directory 
## ref: https://docs.geoserver.org/latest/en/user/datadirectory/setting.html
##
geoserverDataDir: "/opt/geoserver/data_dir"
## @param geowebcacheCacheDir
## ref: https://docs.geoserver.org/latest/en/user/geowebcache/config.html#changing-the-cache-directory
##
geowebcacheCacheDir: "/opt/geoserver/data_dir/gwc"
## @param initialMemory
##
initialMemory: "2G"
## @param maximumMemory
##
maximumMemory: "4G"
## @param initialHeapOccupancyPercent
##
initialHeapOccupancyPercent: "45"
## @param additionalJavaStartupOptions
##
additionalJavaStartupOptions: ""
## @param additionalJavaStartupOptions
##
disableWebInterface: "false"
## Tomcat configuration for Sonarqube
## @param tomcat.user
## @param tomcat.password
## @param tomcat.extras
##
tomcat:
  user: "tomcat"
  password: ""
  extras: "false"
## S3 configuration for Sonarqube
## @param s3.username
## @param s3.password
## @param s3.serverUrl
## @param s3.alias
##
s3:
  username: ""
  password: ""
  serverUrl: ""
  alias: ""
## ref: https://github.com/kartoza/docker-geoserver/blob/master/build_data/stable_plugins.txt
## @param stableExtensions
##
stableExtensions: "css-plugin"
## ref: https://github.com/kartoza/docker-geoserver/blob/master/build_data/community_plugins.txt
## @param communityExtensions
##
communityExtensions: ""
## @param rootWebappRedirect
##
rootWebappRedirect: "false"
## @param geoserverContextRoot
# Deploy to another context-root than https://host/geoserver, ex: https://host/my-geoserver
# For runtime only, do not use at build-time.
##
geoserverContextRoot: "geoserver"
## @param sampleData
##
sampleData: "false"
## @param googleFontsNames
##
googleFontsNames: "inter"
## @param proxyBaseUrlParametrization
##
proxyBaseUrlParametrization: "true"
## @param csrfWhitelist
##
csrfWhitelist: ""
## @param diskquotaDisabled
##
diskquotaDisabled: "false"
## @param diskQuotaSize
##
diskQuotaSize: "20"
## @param diskQuotaFrequency
##
diskQuotaFrequency: "5"
## @param timezone
##
timezone: "GMT"
## @param recreateDatadir
##
recreateDatadir: "false"
## @param recreateDiskquota
##
recreateDiskquota: "false"
## @param disableCors
##
disableCors: "false"
## @param disableSecurityFilter
##
disableSecurityFilter: "false"
## @param resetMonitoringLogs
##
resetMonitoringLogs: "false"

## @section GeoServer Primary parameters
##
primary:
  ## @param primary.name Name of the primary database (eg primary, master, leader, ...)
  ##
  name: primary
  ## @param primary.command Override default container command on GeoServer Primary container(s) (useful when using custom images)
  ##
  command: []
  ## @param primary.args Override default container args on GeoServer Primary container(s) (useful when using custom images)
  ##
  args: []
   ## @param primary.extraEnvVars Extra environment variables to be set on GeoServer primary containers
  ## E.g.
  ## extraEnvVars:
  ##  - name: TZ
  ##    value: "Europe/Paris"
  ##
  extraEnvVars: []
  ## @param primary.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for GeoServer primary containers
  ##
  extraEnvVarsCM: ""
  ## @param primary.extraEnvVarsSecret Name of existing Secret containing extra env vars for GeoServer primary containers
  ##
  extraEnvVarsSecret: ""
  ## @param revisionHistoryLimit The number of old history to retain to allow rollback
  ##
  revisionHistoryLimit: 10
  ## @param primary.updateStrategy.type Update strategy type for the GeoServer primary statefulset
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    type: RollingUpdate
  ## @param primary.initContainers Add additional init containers for the GeoServer Primary pod(s)
  ##
  initContainers: []
  ## @param primary.sidecars Add additional sidecar containers for the GeoServer Primary pod(s)
  ##
  sidecars: []
  ## @param primary.containerPorts.http Container port for http
  ## @param primary.containerPorts.https Container port for https
  ##
  containerPorts:
    http: 8080
    https: 8443
    broker: 61661
  ## @param primary.extraContainerPorts Optionally specify extra list of additional ports
  ## e.g:
  ## extraContainerPorts:
  ##   - name: myservice
  ##     containerPort: 9090
  ##
  extraContainerPorts: []
  ## @param primary.extraVolumes Optionally specify extra list of additional volumes to the GeoServer Primary pod(s)
  ##
  extraVolumes: []
  ## @param primary.extraVolumeClaimTemplates Optionally specify extra list of additional volume claim templates for Tomcat pods in StatefulSet
  ##
  extraVolumeClaimTemplates: []
  ## @param primary.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the GeoServer Primary container(s)
  ##
  extraVolumeMounts: []
  ## @param primary.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param primary.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param podManagementPolicy StatefulSet pod management policy
  ## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy: OrderedReady
  ## @param primary.podLabels GeoServer Primary pod label. If labels are same as commonLabels , this will take precedence
  ##
  podLabels: {}
  ## @param primary.podAnnotations Additional pod annotations for GeoServer primary pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param primary.podAffinityPreset GeoServer primary pod affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param primary.podAntiAffinityPreset GeoServer primary pod anti-affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## GeoServer Primary node affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param primary.nodeAffinityPreset.type GeoServer primary node affinity preset type. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param primary.nodeAffinityPreset.key GeoServer primary node label key to match Ignored if `primary.affinity` is set.
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## @param primary.nodeAffinityPreset.values GeoServer primary node label values to match. Ignored if `primary.affinity` is set.
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param primary.affinity Affinity for GeoServer primary pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param primary.nodeSelector Node labels for GeoServer primary pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param primary.tolerations Tolerations for GeoServer primary pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param primary.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  ## The value is evaluated as a template
  ##
  topologySpreadConstraints: []
  ## @param primary.priorityClassName GeoServer primary pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param primary.runtimeClassName GeoServer primary pods' runtimeClassName
  ##
  runtimeClassName: ""
  ## @param primary.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param primary.terminationGracePeriodSeconds In seconds, time the given to the GeoServer primary pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## GeoServer primary container's resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param primary.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if primary.resources is set (primary.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "none"
  ## @param primary.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 4
  ##     memory: 4096Mi
  ##   limits:
  ##     cpu: 12
  ##     memory: 1288Mi
  ##
  resources: {}
  ## GeoServer primary Pod security context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param primary.podSecurityContext.enabled Enable security context for GeoServer primary pods
  ## @param primary.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param primary.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param primary.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param primary.podSecurityContext.fsGroup Group ID for the mounted volumes' filesystem
  ##
  podSecurityContext:
    enabled: false
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1000
  ## GeoServer primary container security context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param primary.containerSecurityContext.enabled GeoServer primary container securityContext
  ## @param primary.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param primary.containerSecurityContext.runAsUser User ID for the GeoServer primary container
  ## @param primary.containerSecurityContext.runAsGroup Group ID for the GeoServer primary container
  ## @param primary.containerSecurityContext.runAsNonRoot Set GeoServer primary container's Security Context runAsNonRoot
  ## @param primary.containerSecurityContext.allowPrivilegeEscalation Set container's privilege escalation
  ## @param primary.containerSecurityContext.capabilities.drop Set container's Security Context runAsNonRoot
  ## @param primary.containerSecurityContext.seccompProfile.type Set Client container's Security Context seccomp profile
  ## @param primary.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context read-only root filesystem
  ##
  containerSecurityContext:
    enabled: false
    seLinuxOptions: {}
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
    readOnlyRootFilesystem: true
  ## Configure extra options for liveness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param primary.livenessProbe.enabled Enable livenessProbe
  ## @param primary.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param primary.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param primary.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param primary.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param primary.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true    
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
  ## Configure extra options for readiness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param primary.readinessProbe.enabled Enable readinessProbe
  ## @param primary.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param primary.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param primary.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param primary.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param primary.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
  ## Configure extra options for startupProbe probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param primary.startupProbe.enabled Enable startupProbe
  ## @param primary.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param primary.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param primary.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param primary.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param primary.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1
  ## @param primary.customLivenessProbe Override default liveness probe for GeoServer primary containers
  ##
  customLivenessProbe: {}
  ## @param primary.customReadinessProbe Override default readiness probe for GeoServer primary containers
  ##
  customReadinessProbe: {}
  ## @param primary.customStartupProbe Override default startup probe for GeoServer primary containers
  ##
  customStartupProbe: {} 
  ## @param primary.lifecycleHooks for the GeoServer Primary container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param primary.extraPodSpec Optionally specify extra PodSpec for the GeoServer Primary pod(s)
  ##
  extraPodSpec: {}
  ## GeoServer Primary Service parameters
  ##
  service:
    ## @param primary.service.type GeoServer Primary K8s service type
    ##
    type: ClusterIP
    ## @param primary.service.ports.mysql GeoServer Primary K8s service port
    ## @param primary.service.ports.mysqlx GeoServer Primary K8s service mysqlx port
    ##
    ports:
      http: 8080
      https: 8443
      broker: 61661
    ## @param primary.service.nodePorts.mysql GeoServer Primary K8s service node port
    ## @param primary.service.nodePorts.mysqlx GeoServer Primary K8s service node port mysqlx
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    nodePorts:
      http: ""
      https: ""
      broker: ""
    ## @param primary.service.clusterIP GeoServer Primary K8s service clusterIP IP
    ## e.g:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param primary.service.loadBalancerIP GeoServer Primary loadBalancerIP if service type is `LoadBalancer`
    ## Set the LoadBalancer service type to internal only
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    loadBalancerIP: ""
    ## @param primary.service.externalTrafficPolicy Enable client source IP preservation
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param primary.service.loadBalancerSourceRanges Addresses that are allowed when GeoServer Primary service is LoadBalancer
    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## E.g.
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param primary.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
    ##
    extraPorts: []
    ## @param primary.service.annotations Additional custom annotations for GeoServer primary service
    ##
    annotations: {}
    ## @param primary.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
    ## If "ClientIP", consecutive client requests will be directed to the same Pod
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    ##
    sessionAffinity: None
    ## @param primary.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
    ## Headless service properties
    ##
    headless:
      ## @param primary.service.headless.annotations Additional custom annotations for headless GeoServer primary service.
      ##
      annotations: {}
  ## GeoServer primary Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    ## @param primary.pdb.create Enable/disable a Pod Disruption Budget creation for GeoServer primary pods
    ##
    create: true
    ## @param primary.pdb.minAvailable Minimum number/percentage of GeoServer primary pods that should remain scheduled
    ##
    minAvailable: ""
    ## @param primary.pdb.maxUnavailable Maximum number/percentage of GeoServer primary pods that may be made unavailable. Defaults to `1` if both `primary.pdb.minAvailable` and `primary.pdb.maxUnavailable` are empty.
    ##
    maxUnavailable: ""  

## @section GeoServer Secondary parameters
##
secondary:
  ## @param secondary.name Name of the secondary database (eg secondary, master, leader, ...)
  ##
  name: secondary
  ## @param secondary.replicaCount Number of GeoServer secondary replicas
  ##
  replicaCount: 1
  ## @param secondary.command Override default container command on GeoServer Secondary container(s) (useful when using custom images)
  ##
  command: []
  ## @param secondary.args Override default container args on GeoServer Secondary container(s) (useful when using custom images)
  ##
  args: []
  ## @param secondary.extraEnvVars Extra environment variables to be set on GeoServer secondary containers
  ## E.g.
  ## extraEnvVars:
  ##  - name: TZ
  ##    value: "Europe/Paris"
  ##
  extraEnvVars: []
  ## @param secondary.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for GeoServer secondary containers
  ##
  extraEnvVarsCM: ""
  ## @param secondary.extraEnvVarsSecret Name of existing Secret containing extra env vars for GeoServer secondary containers
  ##
  extraEnvVarsSecret: ""
  ## @param revisionHistoryLimit The number of old history to retain to allow rollback
  ##
  revisionHistoryLimit: 10
  ## @param secondary.updateStrategy.type Update strategy type for the GeoServer secondary statefulset
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    type: RollingUpdate
  ## @param secondary.initContainers Add additional init containers for the GeoServer Secondary pod(s)
  ##
  initContainers: []
  ## @param secondary.sidecars Add additional sidecar containers for the GeoServer Secondary pod(s)
  ##
  sidecars: []
  ## @param secondary.containerPorts.http Container port for http
  ## @param secondary.containerPorts.https Container port for https
  ##
  containerPorts:
    http: 8080
    https: 8443
  ## @param secondary.extraContainerPorts Optionally specify extra list of additional ports
  ## e.g:
  ## extraContainerPorts:
  ##   - name: myservice
  ##     containerPort: 9090
  ##
  extraContainerPorts: []
  ## @param secondary.extraVolumes Optionally specify extra list of additional volumes to the GeoServer Secondary pod(s)
  ##
  extraVolumes: []
  ## @param secondary.extraVolumeClaimTemplates Optionally specify extra list of additional volume claim templates for Tomcat pods in StatefulSet
  ##
  extraVolumeClaimTemplates: []
  ## @param secondary.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the GeoServer Secondary container(s)
  ##
  extraVolumeMounts: []
  ## @param secondary.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param secondary.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param podManagementPolicy StatefulSet pod management policy
  ## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy: OrderedReady
  ## @param secondary.podLabels GeoServer Secondary pod label. If labels are same as commonLabels , this will take precedence
  ##
  podLabels: {}
  ## @param secondary.podAnnotations Additional pod annotations for GeoServer secondary pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param secondary.podAffinityPreset GeoServer secondary pod affinity preset. Ignored if `secondary.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param secondary.podAntiAffinityPreset GeoServer secondary pod anti-affinity preset. Ignored if `secondary.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## GeoServer Secondary node affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param secondary.nodeAffinityPreset.type GeoServer secondary node affinity preset type. Ignored if `secondary.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param secondary.nodeAffinityPreset.key GeoServer secondary node label key to match Ignored if `secondary.affinity` is set.
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## @param secondary.nodeAffinityPreset.values GeoServer secondary node label values to match. Ignored if `secondary.affinity` is set.
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param secondary.affinity Affinity for GeoServer secondary pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param secondary.nodeSelector Node labels for GeoServer secondary pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param secondary.tolerations Tolerations for GeoServer secondary pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param secondary.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  ## The value is evaluated as a template
  ##
  topologySpreadConstraints: []
  ## @param secondary.priorityClassName GeoServer secondary pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param secondary.runtimeClassName GeoServer secondary pods' runtimeClassName
  ##
  runtimeClassName: ""
  ## @param secondary.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param secondary.terminationGracePeriodSeconds In seconds, time the given to the GeoServer secondary pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## GeoServer secondary container's resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param secondary.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if secondary.resources is set (secondary.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "none"
  ## @param secondary.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 4
  ##     memory: 4096Mi
  ##   limits:
  ##     cpu: 12
  ##     memory: 1288Mi
  ##
  resources: {}
  ## GeoServer secondary Pod security context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param secondary.podSecurityContext.enabled Enable security context for GeoServer secondary pods
  ## @param secondary.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param secondary.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param secondary.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param secondary.podSecurityContext.fsGroup Group ID for the mounted volumes' filesystem
  ##
  podSecurityContext:
    enabled: false
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1000
  ## GeoServer secondary container security context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param secondary.containerSecurityContext.enabled GeoServer secondary container securityContext
  ## @param secondary.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param secondary.containerSecurityContext.runAsUser User ID for the GeoServer secondary container
  ## @param secondary.containerSecurityContext.runAsGroup Group ID for the GeoServer secondary container
  ## @param secondary.containerSecurityContext.runAsNonRoot Set GeoServer secondary container's Security Context runAsNonRoot
  ## @param secondary.containerSecurityContext.allowPrivilegeEscalation Set container's privilege escalation
  ## @param secondary.containerSecurityContext.capabilities.drop Set container's Security Context runAsNonRoot
  ## @param secondary.containerSecurityContext.seccompProfile.type Set Client container's Security Context seccomp profile
  ## @param secondary.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context read-only root filesystem
  ##
  containerSecurityContext:
    enabled: false
    seLinuxOptions: {}
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
    readOnlyRootFilesystem: true
  ## Configure extra options for liveness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param secondary.livenessProbe.enabled Enable livenessProbe
  ## @param secondary.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param secondary.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param secondary.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param secondary.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param secondary.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true    
    initialDelaySeconds: 0
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  ## Configure extra options for readiness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param secondary.readinessProbe.enabled Enable readinessProbe
  ## @param secondary.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param secondary.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param secondary.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param secondary.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param secondary.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  ## Configure extra options for startupProbe probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param secondary.startupProbe.enabled Enable startupProbe
  ## @param secondary.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param secondary.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param secondary.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param secondary.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param secondary.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 5
    failureThreshold: 60
    successThreshold: 1
  ## @param secondary.customLivenessProbe Override default liveness probe for GeoServer secondary containers
  ##
  customLivenessProbe: {}
  ## @param secondary.customReadinessProbe Override default readiness probe for GeoServer secondary containers
  ##
  customReadinessProbe: {}
  ## @param secondary.customStartupProbe Override default startup probe for GeoServer secondary containers
  ##
  customStartupProbe: {} 
  ## @param secondary.lifecycleHooks for the GeoServer Secondary container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param secondary.extraPodSpec Optionally specify extra PodSpec for the GeoServer Secondary pod(s)
  ##
  extraPodSpec: {}
  ## GeoServer Secondary Service parameters
  ##
  service:
    ## @param secondary.service.type GeoServer Secondary K8s service type
    ##
    type: ClusterIP
    ## @param secondary.service.ports.mysql GeoServer Secondary K8s service port
    ## @param secondary.service.ports.mysqlx GeoServer Secondary K8s service mysqlx port
    ##
    ports:
      http: 8080
      https: 8443
    ## @param secondary.service.nodePorts.mysql GeoServer Secondary K8s service node port
    ## @param secondary.service.nodePorts.mysqlx GeoServer Secondary K8s service node port mysqlx
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    nodePorts:
      http: ""
      https: ""
    ## @param secondary.service.clusterIP GeoServer Secondary K8s service clusterIP IP
    ## e.g:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param secondary.service.loadBalancerIP GeoServer Secondary loadBalancerIP if service type is `LoadBalancer`
    ## Set the LoadBalancer service type to internal only
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    loadBalancerIP: ""
    ## @param secondary.service.externalTrafficPolicy Enable client source IP preservation
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param secondary.service.loadBalancerSourceRanges Addresses that are allowed when GeoServer Secondary service is LoadBalancer
    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## E.g.
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param secondary.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
    ##
    extraPorts: []
    ## @param secondary.service.annotations Additional custom annotations for GeoServer secondary service
    ##
    annotations: {}
    ## @param secondary.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
    ## If "ClientIP", consecutive client requests will be directed to the same Pod
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    ##
    sessionAffinity: None
    ## @param secondary.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
    ## Headless service properties
    ##
    headless:
      ## @param secondary.service.headless.annotations Additional custom annotations for headless GeoServer secondary service.
      ##
      annotations: {}
  ## GeoServer secondary Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    ## @param secondary.pdb.create Enable/disable a Pod Disruption Budget creation for GeoServer secondary pods
    ##
    create: true
    ## @param secondary.pdb.minAvailable Minimum number/percentage of GeoServer secondary pods that should remain scheduled
    ##
    minAvailable: ""
    ## @param secondary.pdb.maxUnavailable Maximum number/percentage of GeoServer secondary pods that may be made unavailable. Defaults to `1` if both `secondary.pdb.minAvailable` and `secondary.pdb.maxUnavailable` are empty.
    ##
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  ##
  autoscaling:
    ## @param secondary.autoscaling.hpa.enabled Enable HPA for GeoServer pods
    ## @param secondary.autoscaling.hpa.minReplicas Minimum number of replicas
    ## @param secondary.autoscaling.hpa.maxReplicas Maximum number of replicas
    ## @param secondary.autoscaling.hpa.targetCPU Target CPU utilization percentage
    ## @param secondary.autoscaling.hpa.targetMemory Target Memory utilization percentage
    ##
    hpa:
      enabled: false
      minReplicas: 1
      maxReplicas: 10
      targetCPU: 80
      targetMemory: 80

## Network Policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
  ##
  enabled: false
  ## @param networkPolicy.allowExternal Don't require server label for connections
  ## The Policy model to apply. When set to false, only pods with the correct
  ## server label will have network access to the ports server is listening
  ## on. When true, server will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: true
  ## @param networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
  ##
  allowExternalEgress: true
  ## @param networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `networkPolicy.allowExternal` is true.
  ##
  addExternalClientAccess: true
  ## @param networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
  ## e.g:
  ## extraIngress:
  ##   - ports:
  ##       - port: 1234
  ##     from:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  extraIngress: []
  ## @param networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
  ## e.g:
  ## extraEgress:
  ##   - ports:
  ##       - port: 1234
  ##     to:
  ##       - podSelector:
  ##           - matchLabels:
  ##               - role: frontend
  ##       - podSelector:
  ##           - matchExpressions:
  ##               - key: role
  ##                 operator: In
  ##                 values:
  ##                   - frontend
  ##
  extraEgress: []
  ## @param networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `networkPolicy.allowExternal` is true.
  ## e.g:
  ## ingressPodMatchLabels:
  ##   my-client: "true"
  #
  ingressPodMatchLabels: {}
  ## @param networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
  ## @param networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
  ##
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}

## Configure the ingress resource that allows you to access the
## GeoServer installation. Set up the URL
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for %%MAIN_CONTAINER_NAME%%
  ##
  enabled: true
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: geoserver.local
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /geoserver
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: %%COMPONENT_NAME%%.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - %%COMPONENT_NAME%%.local
  ##   secretName: %%COMPONENT_NAME%%.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: %%COMPONENT_NAME%%.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  ## @param ingress.extraRules Additional rules to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  ## e.g:
  ## extraRules:
  ## - host: example.local
  ##     http:
  ##       path: /
  ##       backend:
  ##         service:
  ##           name: example-svc
  ##           port:
  ##             name: http
  ##
  extraRules: []

## @section Persistence parameters

## Enable persistence using Persistent Volume Claims
## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
##
persistence:
  ## @param primary.persistence.geowebcacheCacheDir.volumeName Name to assign the volume
  ##
  volumeName: "geowebcache-cache-dir"
  ## @param persistence.geowebcacheCacheDir.mountPath Path to mount the volume at.
  ##
  mountPath: ""
  ## @param persistence.geowebcacheCacheDir.subPath The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services
  ##
  subPath: ""
  ## @param persistence.geowebcacheCacheDir.storageClass Storage class of backing PVC
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.geowebcacheCacheDir.annotations Persistent Volume Claim annotations
  ##
  annotations: {}
  ## @param persistence.geowebcacheCacheDir.accessModes Persistent Volume Access Modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.geowebcacheCacheDir.size Size of data volume
  ##
  size: 8Gi
  ## @param persistence.geowebcacheCacheDir.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""
  ## @param persistence.geowebcacheCacheDir.selector Selector to match an existing Persistent Volume for WordPress data PVC
  ## If set, the PVC can't have a PV dynamically provisioned for it
  ## E.g.
  ## selector:
  ##   matchLabels:
  ##     app: my-app
  ##
  selector: {}
  ## @param persistence.geowebcacheCacheDir.dataSource Custom PVC data source
  ##
  dataSource: {}
  
  geoserverDataDir:
    ## @param persistence.geoserverDataDir.enabled Enable persistence using Persistent Volume Claims
    ##
    enabled: false
    ## @param persistence.geoserverDataDir.volumeName Name to assign the volume
    ##
    volumeName: "geoserver-data-dir"
    ## @param persistence.geoserverDataDir.mountPath Path to mount the volume at.
    ##
    mountPath: ""
    ## @param persistence.geoserverDataDir.subPath The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services
    ##
    subPath: ""
    ## @param persistence.geoserverDataDir.storageClass Storage class of backing PVC
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param persistence.geoserverDataDir.annotations Persistent Volume Claim annotations
    ##
    annotations: {}
    ## @param persistence.geoserverDataDir.accessModes Persistent Volume Access Modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param persistence.geoserverDataDir.size Size of data volume
    ##
    size: 8Gi
    ## @param persistence.geoserverDataDir.existingClaim The name of an existing PVC to use for persistence
    ##
    existingClaim: ""
    ## @param persistence.geoserverDataDir.selector Selector to match an existing Persistent Volume for WordPress data PVC
    ## If set, the PVC can't have a PV dynamically provisioned for it
    ## E.g.
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}
    ## @param persistence.geoserverDataDir.dataSource Custom PVC data source
    ##
    dataSource: {}
  geowebcacheCacheDir:
    ## @param persistence.geowebcacheCacheDir.enabled Enable persistence using Persistent Volume Claims
    ##
    enabled: false
    ## @param primary.persistence.geowebcacheCacheDir.volumeName Name to assign the volume
    ##
    volumeName: "geowebcache-cache-dir"
    ## @param persistence.geowebcacheCacheDir.mountPath Path to mount the volume at.
    ##
    mountPath: ""
    ## @param persistence.geowebcacheCacheDir.subPath The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services
    ##
    subPath: ""
    ## @param persistence.geowebcacheCacheDir.storageClass Storage class of backing PVC
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param persistence.geowebcacheCacheDir.annotations Persistent Volume Claim annotations
    ##
    annotations: {}
    ## @param persistence.geowebcacheCacheDir.accessModes Persistent Volume Access Modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param persistence.geowebcacheCacheDir.size Size of data volume
    ##
    size: 8Gi
    ## @param persistence.geowebcacheCacheDir.existingClaim The name of an existing PVC to use for persistence
    ##
    existingClaim: ""
    ## @param persistence.geowebcacheCacheDir.selector Selector to match an existing Persistent Volume for WordPress data PVC
    ## If set, the PVC can't have a PV dynamically provisioned for it
    ## E.g.
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}
    ## @param persistence.geowebcacheCacheDir.dataSource Custom PVC data source
    ##
    dataSource: {}

## @section Other Parameters

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: false
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true

## @section wait-for Image parameters
##
waitFor:
  ## A script to wait for another service to become available
  ## ref: https://hub.docker.com/r/bitnami/os-shell/tags/
  ## @param waitFor.image.registry [default: REGISTRY_NAME] wait-for image registry
  ## @param waitFor.image.repository [default: REPOSITORY_NAME/os-shell] wait-for image repository
  ## @skip waitFor.image.tag wait-for image tag (immutable tags are recommended)
  ## @param waitFor.image.digest wait-for image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param waitFor.image.pullPolicy wait-for image pull policy
  ## @param waitFor.image.pullSecrets wait-for image pull secrets
  ##
  image:
    registry: docker.io
    repository: eficode/wait-for
    tag: latest
    digest: ""
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param waitFor.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if waitFor.resources is set (waitFor.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "none"
  ## @param waitFor.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 4
  ##     memory: 4096Mi
  ##   limits:
  ##     cpu: 12
  ##     memory: 1288Mi
  ##
  resources: {}
  ## @param waitFor.containerSecurityContext.enabled Enable container security context
  ## @param waitFor.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param waitFor.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## @param waitFor.containerSecurityContext.privileged Set init container's Security Context privileged
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    enabled: true
    privileged: true
    runAsUser: 0
    seLinuxOptions: {}
  ## @param waitFor.timeout Timeout in seconds, zero for no timeout. Defaults to 15 seconds
  timeout: 120

## @section PostgreSQL subchart settings
##

## PostgreSQL chart configuration
## https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
##
postgresql:
 ## @param postgresql.enabled Deploy a Database server to satisfy the applications database requirements
  ## To use an external database set this to false and configure the `externalDatabase.*` parameters
  ##
  enabled: false
  ## @param postgresql.architecture Database architecture. Allowed values: `standalone` or `replication`
  ##
  architecture: standalone
  ## Database Authentication parameters
  ## @param postgresql.auth.rootPassword Database root password
  ## @param postgresql.auth.database Database custom database
  ## @param postgresql.auth.username Database custom user name
  ## @param postgresql.auth.password Database custom user password
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#setting-the-root-password-on-first-run
  ##      https://github.com/bitnami/containers/blob/main/bitnami/postgresql/README.md#creating-a-database-on-first-run
  ##      https://github.com/bitnami/containers/blob/main/bitnami/postgresql/README.md#creating-a-database-user-on-first-run
  ##
  auth:
    rootPassword: ""
    database: postgres
    username: postgres
    password: ""
  ## Database Primary configuration
  ##
  primary:
    ## Database Primary Persistence parameters
    ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
    ## @param postgresql.primary.persistence.enabled Enable persistence on Database using PVC(s)
    ## @param postgresql.primary.persistence.storageClass Persistent Volume storage class
    ## @param postgresql.primary.persistence.accessModes [array] Persistent Volume access modes
    ## @param postgresql.primary.persistence.size Persistent Volume size
    ##
    persistence:
      enabled: true
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      size: 8Gi
    ## Database primary container's resource requests and limits
    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## We usually recommend not to specify default resources and to leave this as a conscious
    ## choice for the user. This also increases chances charts run on environments with little
    ## resources, such as Minikube. If you do want to specify resources, uncomment the following
    ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    ## @param postgresql.primary.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, small, medium, large, xlarge, 2xlarge). This is ignored if primary.resources is set (primary.resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "none"
    ## @param postgresql.primary.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## Example:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}

## @section External Database settings
##

## External Database Configuration
## All of these values are only used when postgresql.enabled is set to false
##
externalDatabase:
  ## @param externalDatabase.host Host of an external PostgreSQL instance to connect (only if postgresql.enabled=false)
  ##
  host: ""
  ## @param externalDatabase.user User of an external PostgreSQL instance to connect (only if postgresql.enabled=false)
  ##
  user: postgres
  ## @param externalDatabase.password Password of an external PostgreSQL instance to connect (only if postgresql.enabled=false)
  ##
  password: ""
  ## @param externalDatabase.existingSecret Secret containing the password of an external PostgreSQL instance to connect (only if postgresql.enabled=false)
  ## Name of an existing secret resource containing the DB password in a 'password' key
  ##
  existingSecret: ""
  ## @param externalDatabase.database Database inside an external PostgreSQL to connect (only if postgresql.enabled=false)
  ##
  database: postgres
  ## @param externalDatabase.port Port of an external PostgreSQL to connect (only if postgresql.enabled=false)
  ##
  port: 5432
