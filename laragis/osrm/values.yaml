# Copyright Broadcom, Inc. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  defaultStorageClass: ""
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname template
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed resources
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed resources
##
commonAnnotations: {}
## @param clusterDomain Kubernetes Cluster Domain
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## LaraGIS OSRM image
## ref: https://hub.docker.com/r/laragis/osrm/tags/
## @param image.registry [default: REGISTRY_NAME] OSRM image registry
## @param image.repository [default: REPOSITORY_NAME/osrm] OSRM image repository
## @skip image.tag osrm image tag (immutable tags are recommended)
## @param image.digest osrm image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy osrm image pull policy
## @param image.pullSecrets osrm image pull secrets
## @param image.debug Specify if debug values should be set
##
image:
  registry: ghcr.io
  repository: project-osrm/osrm-backend
  tag: v5.27.1
  digest: ""
  ## Specify a imagePullPolicy
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false

## @section OSRM Configuration parameters
## osrm settings based on environment variables
## ref: https://github.com/laragis/containers/tree/main/laragis/osrm#environment-variables
##
# @param http section is used when chart is configured to download maps from an HTTP endpoint.
#
# HTTP mode is designed to download .pbf file from the source, extract it and run other preparation commands.
# Each replica in the stateful set executes these actions on its own volume and map.
#
# HTTP mode supports versioning. It downloads/extracts the map once for each version and creates corresponding
# lock-files "downloaded.lock", "extracted.lock". You can remove file to re-do an action, e.g. remove
# "downloaded.txt" to re-download the map.
# There is no logic to distinguish versions, so no version can be considered "old". If you want to remove old
# versions from the volume, you have to do it manually.
data:
  ## @param data.version An arbitrary version for the map at the uri. Any versioning scheme can be used. This field is used only to create corresponding directory within the volume and to decide whether to download a new version of the map.
  ## Example: "20200226-1"
  ##
  version: ""

  ## @param data.uri HTTP(S) uri to download map.
  ##
  ## Some sources/mirrors you may use:
  ## - http://download.geofabrik.de
  ## - https://download.openstreetmap.fr/extracts/
  ##
  uri: https://download.geofabrik.de/asia/vietnam-latest.osm.pbf
## @param extraction 
extraction:
  ## @param extraction.enabled Enable setting up the Airflow database using a K8s job (otherwise it's done by the Webserver on startup)
  ##
  enabled: true
  ## @param extraction.backoffLimit set backoff limit of the job
  ##
  backoffLimit: 3
  ## @section osrm Configuration parameters
  ## osrm settings based on environment variables
  ## ref: https://github.com/laragis/containers/tree/main/laragis/osrm#environment-variables
  ##
  ## @param extraction.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param extraction.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param extraEnvVars Array with extra environment variables to add to the osrm container
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param extraction.extraEnvVarsCM Name of existing ConfigMap containing extra env vars
  ##
  extraEnvVarsCM: ""
  ## @param extraction.extraEnvVarsSecret Name of existing Secret containing extra env vars
  ##
  extraEnvVarsSecret: ""
  ## @param extraction.extraVolumes Optionally specify extra list of additional volumes for OSRM pods
  ##
  extraVolumes: []
  ## @param extraction.extraVolumeMounts Optionally specify extra list of additional volumeMounts for OSRM container(s)
  ##
  extraVolumeMounts: []
  ## @param extraction.initContainers Add additional init containers to the OSRM pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'copy themes and plugins from git and push to /bitnami/osrm/wp-content. Should work with extraVolumeMounts and extraVolumes']
  ##
  initContainers: []
  ## @param extraction.podLabels Extra labels for OSRM pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param extraction.podAnnotations Annotations for OSRM pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## OSRM containers' resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param extraction.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if resources is set (resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "none"
  ## @param extraction.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param extraction.podSecurityContext.enabled Enabled OSRM pods' Security Context
  ## @param extraction.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param extraction.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param extraction.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param extraction.podSecurityContext.fsGroup Set OSRM pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: false
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context (only main container)
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param extraction.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param extraction.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param extraction.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param extraction.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
  ## @param extraction.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param extraction.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param extraction.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param extraction.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param extraction.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param extraction.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: false
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  # Automatic Cleanup for Finished Jobs
  ## @param extraction.cleanupAfterFinished.enabled Enables Cleanup for Finished Jobs
  ## @param extraction.cleanupAfterFinished.seconds Sets the value of ttlSecondsAfterFinished
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/ttlafterfinished/
  ##
  cleanupAfterFinished:
    enabled: true
    seconds: 30
  
## @param profiles Profile to be used for routing ("car", "bicycle", "foot")
profiles:
  car:
    ## @param profiles.car.enabled
    ##
    enabled: true
    ## Enable diagnostic mode in the deployment
    ##
    diagnosticMode:
      ## @param profiles.car.diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
      ##
      enabled: false
      ## @param profiles.car.diagnosticMode.command Command to override all containers in the deployment
      ##
      command:
        - sleep
      ## @param profiles.car.diagnosticMode.args Args to override all containers in the deployment
      ##
      args:
        - infinity
    ## osrm settings based on environment variables
    ## ref: https://github.com/laragis/containers/tree/main/laragis/osrm#environment-variables
    ##
    ## @param profile.car.command Override default container command (useful when using custom images)
    ##
    command: []
    ## Arguments that will be used by default
    ## @param profiles.car.defaultArgs.algorithm
    ##
    defaultArgs:
      algorithm: "mld"
    ## @param profile.car.args Override default container args (useful when using custom images)
    ##
    args: []
    ## @param profile.car.extraArgs Add extra arguments to the default arguments
    ##
    extraArgs: []
    ## @param profile.car.extraEnvVars Array with extra environment variables to add to the osrm container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param profile.car.extraEnvVarsCM Name of existing ConfigMap containing extra env vars
    ##
    extraEnvVarsCM: ""
    ## @param profile.car.extraEnvVarsSecret Name of existing Secret containing extra env vars
    ##
    extraEnvVarsSecret: ""
    ## @param profile.car.replicaCount Number of OSRM replicas to deploy
    ## NOTE: ReadWriteMany PVC(s) are required if replicaCount > 1
    ##
    replicaCount: 1
    ## @param profile.car.updateStrategy.type OSRM deployment strategy type
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    ## NOTE: Set it to `Recreate` if you use a PV that cannot be mounted on multiple pods
    ## e.g:
    ## updateStrategy:
    ##  type: RollingUpdate
    ##  rollingUpdate:
    ##    maxSurge: 25%
    ##    maxUnavailable: 25%
    ##
    updateStrategy:
      type: RollingUpdate
    ## @param profile.car.schedulerName Alternate scheduler
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## @param profile.car.terminationGracePeriodSeconds In seconds, time given to the OSRM pod to terminate gracefully
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
    ##
    terminationGracePeriodSeconds: ""
    ## @param profile.car.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
    ##
    topologySpreadConstraints: []
    ## @param profile.car.priorityClassName Name of the existing priority class to be used by OSRM pods, priority class needs to be created beforehand
    ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    ##
    priorityClassName: ""
    ## @param profile.car.automountServiceAccountToken Mount Service Account token in pod
    ##
    automountServiceAccountToken: false
    ## @param profile.car.hostAliases [array] OSRM pod host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases:
      ## Required for Apache exporter to work
      ##
      - ip: "127.0.0.1"
        hostnames:
          - "status.localhost"
    ## @param profile.car.extraVolumes Optionally specify extra list of additional volumes for OSRM pods
    ##
    extraVolumes: []
    ## @param profile.car.extraVolumeMounts Optionally specify extra list of additional volumeMounts for OSRM container(s)
    ##
    extraVolumeMounts: []
    ## @param profile.car.sidecars Add additional sidecar containers to the OSRM pod
    ## e.g:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []
    ## @param profile.car.initContainers Add additional init containers to the OSRM pods
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    ## e.g:
    ## initContainers:
    ##  - name: your-image-name
    ##    image: your-image
    ##    imagePullPolicy: Always
    ##    command: ['sh', '-c', 'copy themes and plugins from git and push to /bitnami/osrm/wp-content. Should work with extraVolumeMounts and extraVolumes']
    ##
    initContainers: []
    ## @param profile.car.podLabels Extra labels for OSRM pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param profile.car.podAnnotations Annotations for OSRM pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param profile.car.podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param profile.car.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node affinity preset
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param profile.car.nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param profile.car.nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
      ##
      key: ""
      ## @param profile.car.nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param profile.car.affinity Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}
    ## @param profile.car.nodeSelector Node labels for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ## @param profile.car.tolerations Tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## OSRM containers' resource requests and limits
    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## @param profile.car.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if resources is set (resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "none"
    ## @param profile.car.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## Example:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}
    ## Container ports
    ## @param profile.car.containerPorts.http OSRM HTTP container port
    ## @param profile.car.containerPorts.https OSRM HTTPS container port
    ## Example:
    ## containerPorts:
    ##   http: 80
    ##   https: 443
    ##
    containerPorts:
      http: 5000
    ## @param profile.car.extraContainerPorts Optionally specify extra list of additional ports for OSRM container(s)
    ## e.g:
    ## extraContainerPorts:
    ##   - name: myservice
    ##     containerPort: 9090
    ##
    extraContainerPorts: []
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param profile.car.podSecurityContext.enabled Enabled OSRM pods' Security Context
    ## @param profile.car.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
    ## @param profile.car.podSecurityContext.sysctls Set kernel settings using the sysctl interface
    ## @param profile.car.podSecurityContext.supplementalGroups Set filesystem extra groups
    ## @param profile.car.podSecurityContext.fsGroup Set OSRM pod's Security Context fsGroup
    ##
    podSecurityContext:
      enabled: false
      fsGroupChangePolicy: Always
      sysctls: []
      supplementalGroups: []
      fsGroup: 1001
    ## Configure Container Security Context (only main container)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param profile.car.containerSecurityContext.enabled Enabled containers' Security Context
    ## @param profile.car.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
    ## @param profile.car.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
    ## @param profile.car.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
    ## @param profile.car.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
    ## @param profile.car.containerSecurityContext.privileged Set container's Security Context privileged
    ## @param profile.car.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
    ## @param profile.car.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
    ## @param profile.car.containerSecurityContext.capabilities.drop List of capabilities to be dropped
    ## @param profile.car.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
    ##
    containerSecurityContext:
      enabled: false
      seLinuxOptions: {}
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    ## Configure extra options for OSRM containers' liveness, readiness and startup probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ## @param profile.car.startupProbe.enabled Enable startupProbe on OSRM containers
    ## @skip  profile.car.startupProbe.httpGet
    ## @param profile.car.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param profile.car.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param profile.car.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param profile.car.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param profile.car.startupProbe.successThreshold Success threshold for startupProbe
    ## Example:
    ## startupProbe:
    ##   enabled: true
    ##   tcpSocket:
    ##     port: http
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param profile.car.livenessProbe.enabled Enable livenessProbe on OSRM containers
    ## @skip  profile.car.livenessProbe.tcpSocket
    ## @param profile.car.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param profile.car.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param profile.car.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param profile.car.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param profile.car.livenessProbe.successThreshold Success threshold for livenessProbe
    ## Example:
    ## livenessProbe:
    ##   enabled: true
    ##   tcpSocket:
    ##     port: http
    ##
    livenessProbe:
      enabled: false
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param profile.car.readinessProbe.enabled Enable readinessProbe on OSRM containers
    ## @skip  profile.car.readinessProbe.httpGet
    ## @param profile.car.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param profile.car.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param profile.car.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param profile.car.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param profile.car.readinessProbe.successThreshold Success threshold for readinessProbe
    ## Example:
    ## readinessProbe:
    ##   enabled: true
    ##   httpGet:
    ##     path: /route/v1/driving/106.6415966,10.8033297;106.701801,10.7717117
    ##     port: http
    ##
    readinessProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param profile.car.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param profile.car.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param profile.car.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## @param profile.car.lifecycleHooks for the OSRM container(s) to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## OSRM Pod Disruption Budget configuration
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    ## @param profile.car.pdb.create Enable a Pod Disruption Budget creation
    ## @param profile.car.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
    ## @param profile.car.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `pdb.minAvailable` and `pdb.maxUnavailable` are empty.
    ##
    pdb:
      create: false
      minAvailable: ""
      maxUnavailable: ""
    ## OSRM Autoscaling configuration
    ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
    ##
    autoscaling:
      ## @param profile.car.web.autoscaling.hpa.enabled Enable HPA for Airflow webserver
      ## @param profile.car.web.autoscaling.hpa.minReplicas Minimum number of replicas
      ## @param profile.car.web.autoscaling.hpa.maxReplicas Maximum number of replicas
      ## @param profile.car.web.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ## @param profile.car.web.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      hpa:
        enabled: false
        minReplicas: ""
        maxReplicas: ""
        targetCPU: ""
        targetMemory: ""

  bicycle:
    ## @param profiles.bicycle.enabled
    ##
    enabled: true
    ## Enable diagnostic mode in the deployment
    ##
    diagnosticMode:
      ## @param profiles.bicycle.diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
      ##
      enabled: false
      ## @param profiles.bicycle.diagnosticMode.command Command to override all containers in the deployment
      ##
      command:
        - sleep
      ## @param profiles.bicycle.diagnosticMode.args Args to override all containers in the deployment
      ##
      args:
        - infinity
    ## osrm settings based on environment variables
    ## ref: https://github.com/laragis/containers/tree/main/laragis/osrm#environment-variables
    ##
    ## @param profiles.bicycle.command Override default container command (useful when using custom images)
    ##
    command: []
    ## Arguments that will be used by default
    ## @param profiles.bicycle.defaultArgs.algorithm
    ##
    defaultArgs:
      algorithm: "mld"
    ## @param profile.bicycle.args Override default container args (useful when using custom images)
    ##
    args: []
    ## @param profiles.bicycle.extraArgs Add extra arguments to the default arguments
    ##
    extraArgs: []
    ## @param profiles.bicycle.extraEnvVars Array with extra environment variables to add to the osrm container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param profiles.bicycle.extraEnvVarsCM Name of existing ConfigMap containing extra env vars
    ##
    extraEnvVarsCM: ""
    ## @param profiles.bicycle.extraEnvVarsSecret Name of existing Secret containing extra env vars
    ##
    extraEnvVarsSecret: ""
    ## @param profiles.bicycle.replicaCount Number of OSRM replicas to deploy
    ## NOTE: ReadWriteMany PVC(s) are required if replicaCount > 1
    ##
    replicaCount: 1
    ## @param profiles.bicycle.updateStrategy.type OSRM deployment strategy type
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    ## NOTE: Set it to `Recreate` if you use a PV that cannot be mounted on multiple pods
    ## e.g:
    ## updateStrategy:
    ##  type: RollingUpdate
    ##  rollingUpdate:
    ##    maxSurge: 25%
    ##    maxUnavailable: 25%
    ##
    updateStrategy:
      type: RollingUpdate
    ## @param profiles.bicycle.schedulerName Alternate scheduler
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## @param profiles.bicycle.terminationGracePeriodSeconds In seconds, time given to the OSRM pod to terminate gracefully
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
    ##
    terminationGracePeriodSeconds: ""
    ## @param profiles.bicycle.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
    ##
    topologySpreadConstraints: []
    ## @param profiles.bicycle.priorityClassName Name of the existing priority class to be used by OSRM pods, priority class needs to be created beforehand
    ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    ##
    priorityClassName: ""
    ## @param profiles.bicycle.automountServiceAccountToken Mount Service Account token in pod
    ##
    automountServiceAccountToken: false
    ## @param profiles.bicycle.hostAliases [array] OSRM pod host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases:
      ## Required for Apache exporter to work
      ##
      - ip: "127.0.0.1"
        hostnames:
          - "status.localhost"
    ## @param profiles.bicycle.extraVolumes Optionally specify extra list of additional volumes for OSRM pods
    ##
    extraVolumes: []
    ## @param profiles.bicycle.extraVolumeMounts Optionally specify extra list of additional volumeMounts for OSRM container(s)
    ##
    extraVolumeMounts: []
    ## @param profiles.bicycle.sidecars Add additional sidecar containers to the OSRM pod
    ## e.g:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []
    ## @param profiles.bicycle.initContainers Add additional init containers to the OSRM pods
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    ## e.g:
    ## initContainers:
    ##  - name: your-image-name
    ##    image: your-image
    ##    imagePullPolicy: Always
    ##    command: ['sh', '-c', 'copy themes and plugins from git and push to /bitnami/osrm/wp-content. Should work with extraVolumeMounts and extraVolumes']
    ##
    initContainers: []
    ## @param profiles.bicycle.podLabels Extra labels for OSRM pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param profiles.bicycle.podAnnotations Annotations for OSRM pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param profiles.bicycle.podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param profiles.bicycle.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node affinity preset
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param profiles.bicycle.nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param profiles.bicycle.nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
      ##
      key: ""
      ## @param profiles.bicycle.nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param profiles.bicycle.affinity Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}
    ## @param profiles.bicycle.nodeSelector Node labels for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ## @param profiles.bicycle.tolerations Tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## OSRM containers' resource requests and limits
    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## @param profiles.bicycle.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if resources is set (resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "none"
    ## @param profiles.bicycle.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## Example:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}
    ## Container ports
    ## @param profiles.bicycle.containerPorts.http OSRM HTTP container port
    ## @param profiles.bicycle.containerPorts.https OSRM HTTPS container port
    ## Example:
    ## containerPorts:
    ##   http: 80
    ##   https: 443
    ##
    containerPorts:
      http: 5000
    ## @param profiles.bicycle.extraContainerPorts Optionally specify extra list of additional ports for OSRM container(s)
    ## e.g:
    ## extraContainerPorts:
    ##   - name: myservice
    ##     containerPort: 9090
    ##
    extraContainerPorts: []
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param profiles.bicycle.podSecurityContext.enabled Enabled OSRM pods' Security Context
    ## @param profiles.bicycle.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
    ## @param profiles.bicycle.podSecurityContext.sysctls Set kernel settings using the sysctl interface
    ## @param profiles.bicycle.podSecurityContext.supplementalGroups Set filesystem extra groups
    ## @param profiles.bicycle.podSecurityContext.fsGroup Set OSRM pod's Security Context fsGroup
    ##
    podSecurityContext:
      enabled: false
      fsGroupChangePolicy: Always
      sysctls: []
      supplementalGroups: []
      fsGroup: 1001
    ## Configure Container Security Context (only main container)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param profiles.bicycle.containerSecurityContext.enabled Enabled containers' Security Context
    ## @param profiles.bicycle.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
    ## @param profiles.bicycle.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
    ## @param profiles.bicycle.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
    ## @param profiles.bicycle.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
    ## @param profiles.bicycle.containerSecurityContext.privileged Set container's Security Context privileged
    ## @param profiles.bicycle.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
    ## @param profiles.bicycle.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
    ## @param profiles.bicycle.containerSecurityContext.capabilities.drop List of capabilities to be dropped
    ## @param profiles.bicycle.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
    ##
    containerSecurityContext:
      enabled: false
      seLinuxOptions: {}
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    ## Configure extra options for OSRM containers' liveness, readiness and startup probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ## @param profiles.bicycle.startupProbe.enabled Enable startupProbe on OSRM containers
    ## @skip  profiles.bicycle.startupProbe.httpGet
    ## @param profiles.bicycle.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param profiles.bicycle.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param profiles.bicycle.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param profiles.bicycle.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param profiles.bicycle.startupProbe.successThreshold Success threshold for startupProbe
    ## Example:
    ## startupProbe:
    ##   enabled: true
    ##   tcpSocket:
    ##     port: http
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param profiles.bicycle.livenessProbe.enabled Enable livenessProbe on OSRM containers
    ## @skip  profiles.bicycle.livenessProbe.tcpSocket
    ## @param profiles.bicycle.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param profiles.bicycle.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param profiles.bicycle.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param profiles.bicycle.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param profiles.bicycle.livenessProbe.successThreshold Success threshold for livenessProbe
    ## Example:
    ## livenessProbe:
    ##   enabled: true
    ##   tcpSocket:
    ##     port: http
    ##
    livenessProbe:
      enabled: false
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param profiles.bicycle.readinessProbe.enabled Enable readinessProbe on OSRM containers
    ## @skip  profiles.bicycle.readinessProbe.httpGet
    ## @param profiles.bicycle.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param profiles.bicycle.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param profiles.bicycle.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param profiles.bicycle.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param profiles.bicycle.readinessProbe.successThreshold Success threshold for readinessProbe
    ## Example:
    ## readinessProbe:
    ##   enabled: true
    ##   httpGet:
    ##     path: /route/v1/driving/106.6415966,10.8033297;106.701801,10.7717117
    ##     port: http
    ##
    readinessProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param profiles.bicycle.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param profiles.bicycle.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param profiles.bicycle.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## @param profiles.bicycle.lifecycleHooks for the OSRM container(s) to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## OSRM Pod Disruption Budget configuration
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    ## @param profile.bicycle.pdb.create Enable a Pod Disruption Budget creation
    ## @param profile.bicycle.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
    ## @param profile.bicycle.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `pdb.minAvailable` and `pdb.maxUnavailable` are empty.
    ##
    pdb:
      create: false
      minAvailable: ""
      maxUnavailable: ""
    ## OSRM Autoscaling configuration
    ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
    ##
    autoscaling:
      ## @param profile.bicycle.web.autoscaling.hpa.enabled Enable HPA for Airflow webserver
      ## @param profile.bicycle.web.autoscaling.hpa.minReplicas Minimum number of replicas
      ## @param profile.bicycle.web.autoscaling.hpa.maxReplicas Maximum number of replicas
      ## @param profile.bicycle.web.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ## @param profile.bicycle.web.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      hpa:
        enabled: false
        minReplicas: ""
        maxReplicas: ""
        targetCPU: ""
        targetMemory: ""
    
  foot:
    ## @param profile.foot.enabled
    ##
    ## Enable diagnostic mode in the deployment
    ##
    diagnosticMode:
      ## @param profile.foot.diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
      ##
      enabled: false
      ## @param profile.foot.diagnosticMode.command Command to override all containers in the deployment
      ##
      command:
        - sleep
      ## @param profile.foot.diagnosticMode.args Args to override all containers in the deployment
      ##
      args:
        - infinity
    enabled: true
    ## osrm settings based on environment variables
    ## ref: https://github.com/laragis/containers/tree/main/laragis/osrm#environment-variables
    ##
    ## @param profile.foot.command Override default container command (useful when using custom images)
    ##
    command: []
    ## Arguments that will be used by default
    ## @param profiles.foot.defaultArgs.algorithm
    ##
    defaultArgs:
      algorithm: "mld"
    ## @param profile.foot.args Override default container args (useful when using custom images)
    ##
    args: []
    ## @param profiles.foot.extraArgs Add extra arguments to the default arguments
    ##
    extraArgs: []
    ## @param profile.foot.extraEnvVars Array with extra environment variables to add to the osrm container
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param profile.foot.extraEnvVarsCM Name of existing ConfigMap containing extra env vars
    ##
    extraEnvVarsCM: ""
    ## @param profile.foot.extraEnvVarsSecret Name of existing Secret containing extra env vars
    ##
    extraEnvVarsSecret: ""
    ## @param profile.foot.replicaCount Number of OSRM replicas to deploy
    ## NOTE: ReadWriteMany PVC(s) are required if replicaCount > 1
    ##
    replicaCount: 1
    ## @param profile.foot.updateStrategy.type OSRM deployment strategy type
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    ## NOTE: Set it to `Recreate` if you use a PV that cannot be mounted on multiple pods
    ## e.g:
    ## updateStrategy:
    ##  type: RollingUpdate
    ##  rollingUpdate:
    ##    maxSurge: 25%
    ##    maxUnavailable: 25%
    ##
    updateStrategy:
      type: RollingUpdate
    ## @param profile.foot.schedulerName Alternate scheduler
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## @param profile.foot.terminationGracePeriodSeconds In seconds, time given to the OSRM pod to terminate gracefully
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
    ##
    terminationGracePeriodSeconds: ""
    ## @param profile.foot.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
    ##
    topologySpreadConstraints: []
    ## @param profile.foot.priorityClassName Name of the existing priority class to be used by OSRM pods, priority class needs to be created beforehand
    ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    ##
    priorityClassName: ""
    ## @param profile.foot.automountServiceAccountToken Mount Service Account token in pod
    ##
    automountServiceAccountToken: false
    ## @param profile.foot.hostAliases [array] OSRM pod host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases:
      ## Required for Apache exporter to work
      ##
      - ip: "127.0.0.1"
        hostnames:
          - "status.localhost"
    ## @param profile.foot.extraVolumes Optionally specify extra list of additional volumes for OSRM pods
    ##
    extraVolumes: []
    ## @param profile.foot.extraVolumeMounts Optionally specify extra list of additional volumeMounts for OSRM container(s)
    ##
    extraVolumeMounts: []
    ## @param profile.foot.sidecars Add additional sidecar containers to the OSRM pod
    ## e.g:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []
    ## @param profile.foot.initContainers Add additional init containers to the OSRM pods
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    ## e.g:
    ## initContainers:
    ##  - name: your-image-name
    ##    image: your-image
    ##    imagePullPolicy: Always
    ##    command: ['sh', '-c', 'copy themes and plugins from git and push to /bitnami/osrm/wp-content. Should work with extraVolumeMounts and extraVolumes']
    ##
    initContainers: []
    ## @param profile.foot.podLabels Extra labels for OSRM pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param profile.foot.podAnnotations Annotations for OSRM pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param profile.foot.podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param profile.foot.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node affinity preset
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param profile.foot.nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param profile.foot.nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
      ##
      key: ""
      ## @param profile.foot.nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param profile.foot.affinity Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}
    ## @param profile.foot.nodeSelector Node labels for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ## @param profile.foot.tolerations Tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## OSRM containers' resource requests and limits
    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## @param profile.foot.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if resources is set (resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "none"
    ## @param profile.foot.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## Example:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}
    ## Container ports
    ## @param profile.foot.containerPorts.http OSRM HTTP container port
    ## @param profile.foot.containerPorts.https OSRM HTTPS container port
    ## Example:
    ## containerPorts:
    ##   http: 80
    ##   https: 443
    ##
    containerPorts:
      http: 5000
    ## @param profile.foot.extraContainerPorts Optionally specify extra list of additional ports for OSRM container(s)
    ## e.g:
    ## extraContainerPorts:
    ##   - name: myservice
    ##     containerPort: 9090
    ##
    extraContainerPorts: []
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param profile.foot.podSecurityContext.enabled Enabled OSRM pods' Security Context
    ## @param profile.foot.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
    ## @param profile.foot.podSecurityContext.sysctls Set kernel settings using the sysctl interface
    ## @param profile.foot.podSecurityContext.supplementalGroups Set filesystem extra groups
    ## @param profile.foot.podSecurityContext.fsGroup Set OSRM pod's Security Context fsGroup
    ##
    podSecurityContext:
      enabled: false
      fsGroupChangePolicy: Always
      sysctls: []
      supplementalGroups: []
      fsGroup: 1001
    ## Configure Container Security Context (only main container)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param profile.foot.containerSecurityContext.enabled Enabled containers' Security Context
    ## @param profile.foot.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
    ## @param profile.foot.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
    ## @param profile.foot.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
    ## @param profile.foot.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
    ## @param profile.foot.containerSecurityContext.privileged Set container's Security Context privileged
    ## @param profile.foot.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
    ## @param profile.foot.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
    ## @param profile.foot.containerSecurityContext.capabilities.drop List of capabilities to be dropped
    ## @param profile.foot.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
    ##
    containerSecurityContext:
      enabled: false
      seLinuxOptions: {}
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    ## Configure extra options for OSRM containers' liveness, readiness and startup probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ## @param profile.foot.startupProbe.enabled Enable startupProbe on OSRM containers
    ## @skip  startupProbe.httpGet
    ## @param profile.foot.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param profile.foot.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param profile.foot.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param profile.foot.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param profile.foot.startupProbe.successThreshold Success threshold for startupProbe
    ## Example:
    ## startupProbe:
    ##   enabled: true
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param profile.foot.livenessProbe.enabled Enable livenessProbe on OSRM containers
    ## @skip livenessProbe.tcpSocket
    ## @param profile.foot.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param profile.foot.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param profile.foot.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param profile.foot.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param profile.foot.livenessProbe.successThreshold Success threshold for livenessProbe
    ## Example:
    ## livenessProbe:
    ##   enabled: true
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param profile.foot.readinessProbe.enabled Enable readinessProbe on OSRM containers
    ## @skip readinessProbe.httpGet
    ## @param profile.foot.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param profile.foot.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param profile.foot.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param profile.foot.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param profile.foot.readinessProbe.successThreshold Success threshold for readinessProbe
    ## Example:
    ## readinessProbe:
    ##   enabled: true
    ##   httpGet:
    ##     path: /route/v1/driving/106.6415966,10.8033297;106.701801,10.7717117
    ##     port: http
    ##
    readinessProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param profile.foot.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param profile.foot.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param profile.foot.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## @param profile.foot.lifecycleHooks for the OSRM container(s) to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## OSRM Pod Disruption Budget configuration
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    ## @param profile.foot.pdb.create Enable a Pod Disruption Budget creation
    ## @param profile.foot.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
    ## @param profile.foot.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `pdb.minAvailable` and `pdb.maxUnavailable` are empty.
    ##
    pdb:
      create: false
      minAvailable: ""
      maxUnavailable: ""
    ## OSRM Autoscaling configuration
    ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
    ##
    autoscaling:
      ## @param profile.foot.web.autoscaling.hpa.enabled Enable HPA for Airflow webserver
      ## @param profile.foot.web.autoscaling.hpa.minReplicas Minimum number of replicas
      ## @param profile.foot.web.autoscaling.hpa.maxReplicas Maximum number of replicas
      ## @param profile.foot.web.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ## @param profile.foot.web.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      hpa:
        enabled: false
        minReplicas: ""
        maxReplicas: ""
        targetCPU: ""
        targetMemory: ""

## @section Traffic Exposure Parameters
##

## OSRM service parameters
##
service:
  ## @param service.type OSRM service type
  ##
  type: ClusterIP
  ## @param service.ports.http OSRM service HTTP port
  ##
  ports:
    http: 5000
  ## @param service.httpsTargetPort Target port for HTTPS
  ##
  httpsTargetPort: https
  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## @param service.nodePorts.https Node port for HTTPS
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http: ""
  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
  ##
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}
  ## @param service.clusterIP OSRM service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP OSRM service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges OSRM service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy OSRM service external traffic policy
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for OSRM service
  ##
  annotations: {}
  ## @param service.extraPorts Extra port to expose on OSRM service
  ##
  extraPorts: []
## Configure the ingress resource that allows you to access the OSRM installation
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for OSRM
  ##
  enabled: false
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.hostname Default host for the ingress record. The hostname is templated and thus can contain other variable references.
  ##
  hostname: osrm.local
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ##
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.tlsWwwPrefix Adds www subdomain to default cert
  ## Creates tls host with ingress.hostname: {{ print "www.%s" .Values.ingress.hostname }}
  ## Is enabled if "nginx.ingress.kubernetes.io/from-to-www-redirect" is "true"
  tlsWwwPrefix: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record. The host names are templated and thus can contain other variable references.
  ## e.g:
  ## extraHosts:
  ##   - name: osrm.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - osrm.local
  ##   secretName: osrm.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: osrm.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  ## @param ingress.extraRules Additional rules to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  ## e.g:
  ## extraRules:
  ## - host: osrm.local
  ##     http:
  ##       path: /
  ##       backend:
  ##         service:
  ##           name: osrm-svc
  ##           port:
  ##             name: http
  ##
  extraRules: []

## @section Persistence Parameters
##

## Persistence Parameters
## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.storageClass Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClass: ""
  ## @param persistence.accessModes [array] Persistent Volume access modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.accessMode Persistent Volume access mode (DEPRECATED: use `persistence.accessModes` instead)
  ##
  accessMode: ReadWriteOnce
  ## @param persistence.size Persistent Volume size
  ##
  size: 10Gi
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
  ## @param persistence.mountPath The path the data volume will be mounted at
  ##
  mountPath: "/data"
  ## @param persistence.subPath The subdirectory of the volume to mount to
  ##
  subPath: ""
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""
  ## @param persistence.selector Selector to match an existing Persistent Volume for OSRM data PVC
  ## If set, the PVC can't have a PV dynamically provisioned for it
  ## E.g.
  ## selector:
  ##   matchLabels:
  ##     app: my-app
  ##
  selector: {}
  ## @param persistence.annotations Persistent Volume Claim annotations
  ##
  annotations: {}
## @section Other Parameters
##

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: false
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []
## OSRM Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Enable creation of ServiceAccount for OSRM pod
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
  ## Can be set to false if pods using this serviceAccount do not need to use K8s API
  ##
  automountServiceAccountToken: false
  ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
  ##
  annotations: {}