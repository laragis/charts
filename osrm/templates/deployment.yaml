{{- range $name, $obj := .Values.profiles }}
{{- if $obj.enabled }}
{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: {{ include "common.capabilities.deployment.apiVersion" $ }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" $ }}-{{ $name }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $.Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: {{ $name }}
  {{- if $.Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list $obj.podLabels $.Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  {{- if $obj.updateStrategy }}
  strategy: {{- toYaml $obj.updateStrategy | nindent 4 }}
  {{- end }}
  {{- if not $obj.autoscaling.hpa.enabled }}
  replicas: {{ $obj.replicaCount }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: {{ $name }}
      annotations:
        {{- if $obj.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" $obj.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "osrm.imagePullSecrets" $ | nindent 6 }}
      automountServiceAccountToken: {{ $obj.automountServiceAccountToken }}
      {{- if $obj.hostAliases }}
      # yamllint disable rule:indentation
      hostAliases: {{- include "common.tplvalues.render" (dict "value" $obj.hostAliases "context" $) | nindent 8 }}
      # yamllint enable rule:indentation
      {{- end }}
      {{- if $obj.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" $obj.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" $obj.podAffinityPreset "component" $name "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" $obj.podAntiAffinityPreset "component" $name "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" $obj.nodeAffinityPreset.type "key" $obj.nodeAffinityPreset.key "values" $obj.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if $obj.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" $obj.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if $obj.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" $obj.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if $obj.priorityClassName }}
      priorityClassName: {{ $obj.priorityClassName }}
      {{- end }}
      {{- if $obj.schedulerName }}
      schedulerName: {{ $obj.schedulerName | quote }}
      {{- end }}
      {{- if $obj.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" $obj.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "osrm.serviceAccountName" $ }}
      {{- if $obj.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ $obj.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if $obj.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" $obj.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-file
          image: jwilder/dockerize:0.6.1
          args:
            - -timeout=600s
            - -wait
            - file:///{{ $.Values.persistence.mountPath }}/{{ include "osrm.data.version" $ }}/{{ $name }}/map.osrm.geometry
          volumeMounts:
            {{- if and $.Values.persistence.enabled $.Values.persistence.mountPath }}
            - name: data
              mountPath: {{ $.Values.persistence.mountPath }}
              subPath: {{ $.Values.persistence.subPath }}
            {{- end }}
        {{- if $obj.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" $obj.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: osrm-{{ $name }}
          image: {{ include "osrm.image" $ }}
          imagePullPolicy: {{ $.Values.image.pullPolicy | quote }}
          {{- if $obj.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" $obj.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if $obj.command }}
          command: {{- include "common.tplvalues.render" ( dict "value" $obj.command "context" $) | nindent 12 }}         
          {{- end }}
          {{- if $obj.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" $obj.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if $obj.args }}
          args: {{- include "common.tplvalues.render" ( dict "value" $obj.args "context" $) | nindent 12 }}
          {{- else }}
          args:
            - osrm-routed
            - --algorithm
            - {{ $obj.defaultArgs.algorithm | quote }}
            - /data/{{ include "osrm.data.version" $ }}/{{ $name }}/map.osrm
            {{- if $obj.extraArgs }}
            {{- toYaml $obj.extraArgs | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if $obj.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" $obj.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" (or $.Values.image.debug $obj.diagnosticMode.enabled) | quote }}
            {{- if $obj.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" $obj.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if $obj.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" $obj.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if $obj.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" $obj.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            {{- if $obj.containerPorts.http }}
            - name: http
              containerPort: {{ $obj.containerPorts.http }}
            {{- end }}
            {{- if $obj.containerPorts.https }}
            - name: https
              containerPort: {{ $obj.containerPorts.https }}
            {{- end }}
            {{- if $obj.extraContainerPorts }}
            {{- include "common.tplvalues.render" (dict "value" $obj.extraContainerPorts "context" $) | nindent 12 }}
            {{- end }}
          {{- if $obj.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" $obj.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if not $obj.diagnosticMode.enabled }}
          {{- if $obj.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" $obj.customStartupProbe "context" $) | nindent 12 }}
          {{- else if $obj.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit $obj.startupProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: http
          {{- end }}
          {{- if $obj.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" $obj.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if $obj.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit $obj.livenessProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: http
          {{- end }}
          {{- if $obj.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" $obj.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if $obj.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit $obj.readinessProbe "enabled") "context" $) | nindent 12 }}            
          {{- end }}
          {{- end }}
          {{- if $obj.resources }}
          resources: {{- toYaml $obj.resources | nindent 12 }}
          {{- else if ne $obj.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" $obj.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if and $.Values.persistence.enabled $.Values.persistence.mountPath }}
            - name: data
              mountPath: {{ $.Values.persistence.mountPath }}
              subPath: {{ $.Values.persistence.subPath }}
            {{- end }}
            {{- if $obj.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" $obj.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if $obj.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" $obj.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: data
          {{- if $.Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ $.Values.persistence.existingClaim | default (include "common.names.fullname" $) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if $obj.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" $obj.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
---
{{- end }}
{{- end }}